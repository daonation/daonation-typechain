/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDaonation,
  IDaonationInterface,
} from "../../contracts/IDaonation";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rewardsAmount",
        type: "uint256",
      },
    ],
    name: "addGovernanceTokenRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaquinhaId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "donationAmount",
        type: "uint256",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "expectedValue",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "donationsTo",
        type: "address",
      },
    ],
    name: "proposeVaquinha",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaquinhaId",
        type: "uint256",
      },
    ],
    name: "redeemDonations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaquinhaId",
        type: "uint256",
      },
    ],
    name: "unlockTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaquinhaId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensToUse",
        type: "uint256",
      },
    ],
    name: "voteAgainstVaquinha",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vaquinhaId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensToUse",
        type: "uint256",
      },
    ],
    name: "voteForVaquinha",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IDaonation__factory {
  static readonly abi = _abi;
  static createInterface(): IDaonationInterface {
    return new utils.Interface(_abi) as IDaonationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDaonation {
    return new Contract(address, _abi, signerOrProvider) as IDaonation;
  }
}
